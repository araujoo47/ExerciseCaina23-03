{"ast":null,"code":"var _jsxFileName = \"/Users/araujo/Desktop/likeButton/liked-button/src/index.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport cx from \"classnames\";\nimport \"./styles.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.like = () => {\n      fetch(\"http://localhost:3000/\").then(data => data.json()).then(data => {\n        if (data) {\n          this.liked = !this.liked;\n          this.setState(({\n            count\n          }) => this.liked ? {\n            count: count + 1,\n            error: \"\"\n          } : {\n            count: count + 1,\n            error: \"\"\n          });\n        } else {\n          this.setState(() => ({\n            error: \"ERROR\"\n          }));\n        }\n      });\n    };\n\n    this.state = {\n      count: 100\n    };\n    this.liked = false;\n  }\n\n  render() {\n    const count = this.state.count;\n    return /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.like,\n      className: cx(\"like-button\", {\n        liked: this.liked\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, \"Like | \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"likes-counter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 16\n      }\n    }, count));\n  }\n\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 17\n  }\n}), rootElement);","map":{"version":3,"sources":["/Users/araujo/Desktop/likeButton/liked-button/src/index.js"],"names":["React","Component","ReactDOM","cx","App","constructor","props","like","fetch","then","data","json","liked","setState","count","error","state","render","rootElement","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,EAAP,MAAe,YAAf;AAEA,OAAO,cAAP;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAC1BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAMnBC,IANmB,GAMZ,MAAM;AACXC,MAAAA,KAAK,CAAC,wBAAD,CAAL,CACKC,IADL,CACUC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADlB,EAEKF,IAFL,CAEUC,IAAI,IAAI;AACV,YAAIA,IAAJ,EAAU;AACN,eAAKE,KAAL,GAAa,CAAC,KAAKA,KAAnB;AACA,eAAKC,QAAL,CAAc,CAAC;AAAEC,YAAAA;AAAF,WAAD,KACV,KAAKF,KAAL,GACM;AAAEE,YAAAA,KAAK,EAAEA,KAAK,GAAG,CAAjB;AAAoBC,YAAAA,KAAK,EAAE;AAA3B,WADN,GAEM;AAAED,YAAAA,KAAK,EAAEA,KAAK,GAAG,CAAjB;AAAoBC,YAAAA,KAAK,EAAE;AAA3B,WAHV;AAKH,SAPD,MAOO;AACH,eAAKF,QAAL,CAAc,OAAO;AACjBE,YAAAA,KAAK,EAAE;AADU,WAAP,CAAd;AAGH;AACJ,OAfL;AAgBH,KAvBoB;;AAEjB,SAAKC,KAAL,GAAa;AAAEF,MAAAA,KAAK,EAAE;AAAT,KAAb;AACA,SAAKF,KAAL,GAAa,KAAb;AACD;;AAoBDK,EAAAA,MAAM,GAAG;AAAA,UACCH,KADD,GACW,KAAKE,KADhB,CACCF,KADD;AAEP,wBACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,OAAO,EAAE,KAAKP,IAFhB;AAGE,MAAA,SAAS,EAAEJ,EAAE,CAAC,aAAD,EAAgB;AAAES,QAAAA,KAAK,EAAE,KAAKA;AAAd,OAAhB,CAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAKS;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCE,KAAjC,CALT,CADF;AASD;;AApCyB;;AAuC5B,MAAMI,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACAlB,QAAQ,CAACe,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,WAAzB","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport cx from \"classnames\";\n\nimport \"./styles.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { count: 100 };\n    this.liked = false;\n  }\n\n  like = () => {\n    fetch(\"http://localhost:3000/\")\n        .then(data => data.json())\n        .then(data => {\n            if (data) {\n                this.liked = !this.liked;\n                this.setState(({ count }) =>\n                    this.liked\n                        ? { count: count + 1, error: \"\" }\n                        : { count: count + 1, error: \"\" }\n                );\n            } else {\n                this.setState(() => ({\n                    error: \"ERROR\"\n                }));\n            }\n        });\n};\n  render() {\n    const { count } = this.state;\n    return (\n      <button\n        type=\"button\"\n        onClick={this.like}\n        className={cx(\"like-button\", { liked: this.liked })}\n      >\n        Like | <span className=\"likes-counter\">{count}</span>\n      </button>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"]},"metadata":{},"sourceType":"module"}